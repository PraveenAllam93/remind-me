version: '3.8'
services:
  mongo:
    container_name: dev-mongo
    image: mongo:latest 
    restart: on-failure:5
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: stargate
    volumes:
      - "/Users/praveenallam/Desktop/remind-me/data/mongo-data:/data/db"
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - devnet
  

  mongo-express:
    container_name: dev-mongo-express
    image: mongo-express:latest
    restart: on-failure:5
    ports:
      - "9996:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: stargate
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: stargate
    depends_on:
      - mongo
    security_opt:
      - no-new-privileges:true
    networks:
      - devnet

  redis:
    container_name: dev-redis
    image: redis:latest
    restart: on-failure:5
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - "/Users/praveenallam/Desktop/remind-me/data/redis-data:/data"
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - devnet
    
  redis-commander:
    container_name: dev-redis-commander
    image: rediscommander/redis-commander:latest
    restart: on-failure:5
    ports:
      - "9997:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    networks:
      - devnet

networks:
  devnet:
    driver: bridge